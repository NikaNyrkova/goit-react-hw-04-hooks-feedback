{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FedbackOptions.js","components/FeedbackStatistics/FeedbackStatistics.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackStatistics/FeedbackStatistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css"],"names":["Section","title","children","className","st","section","FeedbackOptions","onLiveFeedback","options","feedback_options","map","option","index","type","feedback_button","id","name","onClick","e","target","FeedbackStatistics","good","neutral","bad","total","positivePercentage","console","log","statistics_item","Notification","message","notification","App","useState","state","setState","getTotal","Object","keys","prev","Math","ceil","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"yPAceA,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASC,UAAWC,IAAGC,QAAvB,UACE,6BAAKJ,IACJC,M,gBCaQI,EAjBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,QAAnB,OACtB,qBAAKL,UAAWC,IAAGK,iBAAnB,SACGD,EAAQE,KAAI,SAACC,EAAQC,GAAT,OACX,wBACEC,KAAK,SACLV,UAAWC,IAAGU,gBACdC,GAAIH,EAEJI,KAAML,EACNM,QAAS,SAACC,GAAD,OAAOX,EAAeW,EAAEC,OAAOH,OAN1C,SAQGL,GAJIC,S,gBCaEQ,EArBY,SAAC,GAMrB,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,MACAC,EACI,EADJA,mBAGA,OADAC,QAAQC,IAAIF,GAEV,gCACE,oBAAGtB,UAAWC,IAAGwB,gBAAjB,mBAAyCP,KACzC,oBAAGlB,UAAWC,IAAGwB,gBAAjB,sBAA4CN,KAC5C,oBAAGnB,UAAWC,IAAGwB,gBAAjB,kBAAwCL,KACxC,oBAAGpB,UAAWC,IAAGwB,gBAAjB,oBAA0CJ,KAC1C,oBAAGrB,UAAWC,IAAGwB,gBAAjB,gCACsBH,EADtB,W,gBCTSI,EAJM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mBAAG3B,UAAWC,IAAG2B,aAAjB,SAAgCD,KCkDnBE,EAjDH,WACV,IAKA,EAA0BC,mBALL,CACnBZ,KAAM,EACNC,QAAS,EACTC,IAAK,IAEP,mBAAOW,EAAP,KAAcC,EAAd,KAMQd,EAAuBa,EAAvBb,KAAMC,EAAiBY,EAAjBZ,QAASC,EAAQW,EAARX,IAEjBa,EAAW,WACf,OAAOf,EAAOC,EAAUC,GAOpBC,EAAQY,IACR5B,EAAU6B,OAAOC,KAAKJ,GAE5B,OACE,sBAAK/B,UAAU,MAAf,UACE,cAAC,EAAD,CAASF,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBM,eApBA,SAACS,GACtBmB,GAAS,SAACI,GAAD,mBAAC,eAAeA,GAAhB,kBAAuBvB,EAAOuB,EAAKvB,GAAQ,QAmBCR,QAASA,MAE3DgB,EACC,cAAC,EAAD,CAASvB,MAAM,aAAf,SACE,cAAC,EAAD,CACEoB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAlBDJ,EAAOmB,KAAKC,KAAMpB,EAAOe,IAAc,KAAO,MAsBjD,cAAC,EAAD,CAASnC,MAAM,GAAf,SACE,cAAC,EAAD,CAAc6B,QAAQ,4BC1ChCY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCV1BC,EAAOC,QAAU,CAAC,gBAAkB,8C,kBCApCD,EAAOC,QAAU,CAAC,iBAAmB,0CAA0C,gBAAkB,2C,kBCAjGD,EAAOC,QAAU,CAAC,QAAU,2B,kBCA5BD,EAAOC,QAAU,CAAC,aAAe,sC","file":"static/js/main.a0a08432.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport st from \"./Section.module.css\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={st.section}>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport st from \"./FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOptions = ({ onLiveFeedback, options }) => (\r\n  <div className={st.feedback_options}>\r\n    {options.map((option, index) => (\r\n      <button\r\n        type=\"button\"\r\n        className={st.feedback_button}\r\n        id={index}\r\n        key={index}\r\n        name={option}\r\n        onClick={(e) => onLiveFeedback(e.target.name)}\r\n      >\r\n        {option}\r\n      </button>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLiveFeedback: PropTypes.func,\r\n  options: PropTypes.array,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport st from \"./FeedbackStatistics.module.css\";\r\n\r\nconst FeedbackStatistics = ({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) => {\r\n  console.log(positivePercentage);\r\n  return (\r\n    <div>\r\n      <p className={st.statistics_item}>Good: {good}</p>\r\n      <p className={st.statistics_item}>Neutral: {neutral}</p>\r\n      <p className={st.statistics_item}>Bad: {bad}</p>\r\n      <p className={st.statistics_item}>Total: {total}</p>\r\n      <p className={st.statistics_item}>\r\n        Positive feedback: {positivePercentage}%\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackStatistics;\r\n\r\nFeedbackStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport st from \"./Notification.module.css\";\r\n\r\nconst Notification = ({ message }) => (\r\n  <p className={st.notification}>{message}</p>\r\n);\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n","import React, { useState } from \"react\";\n\nimport Section from \"./components/Section/Section\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport FeedbackStatistics from \"./components/FeedbackStatistics\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const initialState = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  const [state, setState] = useState(initialState);\n\n  const onLiveFeedback = (name) => {\n    setState((prev) => ({ ...prev, [name]: prev[name] + 1 }));\n  };\n\n  const { good, neutral, bad } = state;\n\n  const getTotal = () => {\n    return good + neutral + bad;\n  };\n\n  const getPositivePercentage = () => {\n    return good ? Math.ceil((good / getTotal()) * 100) : 0;\n  };\n\n  const total = getTotal();\n  const options = Object.keys(state);\n\n  return (\n    <div className=\"App\">\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions onLiveFeedback={onLiveFeedback} options={options} />\n      </Section>\n      {total ? (\n        <Section title=\"Statistics\">\n          <FeedbackStatistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={getPositivePercentage()}\n          />\n        </Section>\n      ) : (\n        <Section title=\"\">\n          <Notification message=\"No feedback given\" />\n        </Section>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics_item\":\"FeedbackStatistics_statistics_item__15_8L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback_options\":\"FeedbackOptions_feedback_options__2hK3f\",\"feedback_button\":\"FeedbackOptions_feedback_button__3x1Zq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1fn4C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3kUXZ\"};"],"sourceRoot":""}